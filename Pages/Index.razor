@page "/"
@using BlazorAppDevxTest.Models;
@using DevExpress.Blazor
@using MudBlazor;
@using BlazorAppDevxTest.Services;

@inject ISalesInfoDataProvider Sales

<MudGrid xs="12">
    <MudItem xs="12">
        <DxChart Data="chartsData"
                 LabelOverlap="ChartLabelOverlap.Hide">

            <DevExpress.Blazor.DxChartLineSeries Name="North America"
                                                 T="SaleInfo"
                                                 TArgument="DateTime"
                                                 TValue="int"
                                                 ArgumentField="si => new DateTime(si.Date.Year, si.Date.Month, 1)"
                                                 ValueField="si => si.Amount"
                                                 SummaryMethod="Enumerable.Sum"
                                                 Filter='si => si.Region == "North America" '
                                                 HoverMode="ChartContinuousSeriesHoverMode.None">
                <DxChartSeriesPoint Visible=ShowSeriesPointMarkers
                                    HoverMode="ChartSeriesPointHoverMode.None" />
                <DxChartSeriesLabel Visible=ShowSeriesLabels
                                    Format="ChartElementFormat.Thousands(1)" />
            </DevExpress.Blazor.DxChartLineSeries>


            <DevExpress.Blazor.DxChartLineSeries Name="Europe"
                                                 T="SaleInfo"
                                                 TArgument="DateTime"
                                                 TValue="int"
                                                 ArgumentField="si => new DateTime(si.Date.Year, si.Date.Month, 1)"
                                                 ValueField="si => si.Amount"
                                                 SummaryMethod="Enumerable.Sum"
                                                 Filter='si => si.Region == "Europe"'
                                                 HoverMode="ChartContinuousSeriesHoverMode.Series">
                <DxChartSeriesPoint Visible=ShowSeriesPointMarkers
                                    HoverMode="ChartSeriesPointHoverMode.Point" />
                <DxChartSeriesLabel Visible=ShowSeriesLabels
                                    Format="ChartElementFormat.Thousands(1)" />
            </DevExpress.Blazor.DxChartLineSeries>
           @* <DxChartLegend AllowToggleSeries="true"
                           Orientation="DevExpress.Blazor.Orientation.Vertical"
                           HorizontalAlignment="DevExpress.Blazor.HorizontalAlignment.Right">
                <DxChartTitle Text="Data Type">
                    <DxChartSubTitle Text="legend label"> </DxChartSubTitle>
                </DxChartTitle>
            </DxChartLegend>*@
            <DxChartLegend Position="RelativePosition.Outside"
                           HorizontalAlignment="DevExpress.Blazor.HorizontalAlignment.Right" />
            <DxChartTooltip Enabled=true>
                @context.Point.Render((seriesPoint) =>
                    @<div style="margin: 0.75rem">
                        <div>@seriesPoint.SeriesName</div>
                        <span>@($"{seriesPoint.Argument: MMMM yyyy}: ")</span>
                        <span>@($"{seriesPoint.Value: $0,.0}K")</span>
                    </div>
                )
            </DxChartTooltip>
        </DxChart>
    </MudItem>
</MudGrid>

<style>
    .dx-chart {
        width: 1000px !important;
        height: 400px !important;
    }
</style>

@code {
    IEnumerable<SaleInfo> chartsData;
    [Parameter] public bool ShowSeriesPointMarkers { get; set; } = true;
    [Parameter] public bool ShowSeriesLabels { get; set; } = true;
    CancellationToken ct = new CancellationToken(false);

    protected override async Task OnInitializedAsync()
    {
        chartsData = await Sales.GetSalesAsync();
    }
}